'''
문제 : N과 M(2)
난이도 : 실버 3
링크 : https://www.acmicpc.net/problem/15650

풀이방법
- 간단한 2중 for문으로 해결하려하였으나 백트래킹 문제인 줄은 생각 못했다.
- 좌측의 숫자가 고정된 상태에서 숫자가 하나씩 증가하여 출력되는 것이 노드를 찾아들어가는 것과 같다는 걸 풀이는 보고 알게 됐다.
- 스스로 구현하지 못하여 다른 사람의 코드를 참고했다.
- 보통 dfs 구현을 할 때에는 for문 안에서 해당 함수를 지속적으로 호출했던 것 같은데 이번 풀이는 dfs 와 함께 내부의 for문도 같이 호출하는 형태였다.
- 생각해보면 노드를 찾아들어가기 위해서는 하나의 노드를 들어갔을 때 계속 다음 노드를 찾는 작업(for문)이 반복 되어야 했으므로 당연했다.
- 출력 시점을 어떻게 해야할지 고민을 해봤지만 하나의 노드가 다 돌았을 때 pop 하면서 한꺼번에 출력을 하는 것이 가장 이상적인 방법이었다.
'''

n, m = map(int,input().split())
s = []

def dfs(start):
    if len(s)==m:
        print(' '.join(map(str,s)))
        return

    for i in range(start, n+1):
        if i not in s:
            s.append(i)
            dfs(i+1)
            s.pop()

dfs(1)